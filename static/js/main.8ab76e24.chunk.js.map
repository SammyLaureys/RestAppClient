{"version":3,"sources":["components/createform.js","components/editform.js","components/book.js","App.js","reportWebVitals.js","index.js"],"names":["CreateForm","props","createBook","useState","title","setTitle","author","setAuthor","className","value","onChange","e","target","onClick","EditForm","selectedBook","setSelectedBook","editBook","Book","book","deleteBook","App","books","setBooks","isLoading","setIsLoading","message","setMessage","a","console","log","fetchOptions","method","headers","body","JSON","stringify","fetch","process","response","json","ok","status","error","errorMessage","errors","reduce","accumulator","defaultMessage","id","map","b","filter","useEffect","getBooks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ab76e24.chunk.js","sourcesContent":["import {useState} from \"react\";\n\nexport function CreateForm(props) {\n    const {createBook} = props;\n    const [title, setTitle] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n\n    return <div className=\"editbox\">\n        <div>new book</div>\n        <div className=\"editboxrow\">\n            <label>title: </label>\n            <input value={title} onChange={(e) => setTitle(e.target.value)}/>\n        </div>\n        <div className=\"editboxrow\">\n            <label>author: </label>\n            <input value={author} onChange={(e) => setAuthor(e.target.value)}/>\n        </div>\n        <div className=\"editboxbuttonrow\">\n            <button onClick={() => createBook({title, author})}>create</button>\n        </div>\n    </div>;\n}","/** @return {null} */\nexport function EditForm(props) {\n    const {selectedBook, setSelectedBook, editBook} = props;\n\n    if (!selectedBook) return null;\n\n    return <>\n        <div className=\"overlay\" onClick={() => setSelectedBook()}/>\n        <div className=\"editbox modal\">\n            <div>edit the book</div>\n            <div className=\"editboxrow\">\n                <label>title: </label>\n                <input value={selectedBook.title}\n                       onChange={(e) => setSelectedBook({...selectedBook, title: e.target.value})}/>\n            </div>\n            <div className=\"editboxrow\">\n                <label>author: </label>\n                <input value={selectedBook.author}\n                       onChange={(e) => setSelectedBook({...selectedBook, author: e.target.value})}/>\n            </div>\n            <div className=\"editboxbuttonrow\">\n                <button onClick={() => setSelectedBook()}>cancel</button>\n                <button onClick={() => editBook(selectedBook)}>save</button>\n            </div>\n        </div>\n    </>;\n}","export function Book(props) {\n    const {book, setSelectedBook, deleteBook} = props;\n    return <div className=\"bookRow\">\n        <div className=\"bookTitle\">{book.title}</div>\n        <div className=\"bookAuthor\">{book.author}</div>\n        <div>\n            <button onClick={() => setSelectedBook(book)}>edit</button>\n        </div>\n        <div>\n            <button onClick={() => deleteBook(book)}>delete</button>\n        </div>\n    </div>\n}","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {CreateForm} from \"./components/createform\";\nimport {EditForm} from \"./components/editform\";\nimport {Book} from \"./components/book\";\n\nfunction App() {\n    const [books, setBooks] = useState([]);\n    const [selectedBook, setSelectedBook] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [message, setMessage] = useState();\n\n\n    console.log(\"render App()\");\n\n\n    async function createBook(book) {\n        console.log(\"async createBook\");\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(book)\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}`, fetchOptions);\n            const body = await response.json();\n            if (response.ok) {\n                console.log(`   async createBook: received response ${JSON.stringify(body)}`);\n                setBooks([...books, body]);\n                console.log(\"   async createBook: done\");\n                setMessage(`book ${book.title} created`);\n            } else {\n                console.log(`   async createBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                const errorMessage = body.errors &&\n                    body.errors.reduce((accumulator, error) => `${accumulator} ${error.defaultMessage} ---`, \"--- \");\n                console.log(` ${JSON.stringify(body)}`);\n                console.log(` ${errorMessage}`);\n                setMessage(errorMessage || body.message);\n            }\n        } catch (e) {\n            console.log(`   async createBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    async function editBook(book) {\n        if (!selectedBook) return;\n        console.log(\"async editBook\");\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(book)\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}/${book.id}`, fetchOptions);\n            const body = await response.json();\n            if (response.ok) {\n                console.log(`   async editBook: received response ${JSON.stringify(body)}`);\n                setBooks(books.map((b) => b.id === body.id ? body : b));\n                console.log(\"   async editBook: done\");\n                setMessage(`book ${book.title} modified`);\n            } else {\n                console.log(`   async editBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                const errorMessage = body.errors &&\n                    body.errors.reduce((accumulator, error) => `${accumulator} ${error.defaultMessage} ---`, \"--- \");\n                console.log(` ${JSON.stringify(body)}`);\n                console.log(` ${errorMessage}`);\n                setMessage(errorMessage || body.message);\n            }\n        } catch (e) {\n            console.log(`   async deleteBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    async function deleteBook(book) {\n        console.log(\"async deleteBook\");\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'DELETE'\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}/${book.id}`, fetchOptions);\n            if (response.ok) {\n                console.log(`   async deleteBook: received response `);\n                setBooks(books.filter((b) => b.id !== book.id));\n                console.log(\"   async deleteBook: done\");\n                setMessage(`book ${book.title} deleted`);\n            } else {\n                const body = await response.json();\n                console.log(`   async deleteBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                setMessage(body.message);\n            }\n        } catch (e) {\n            console.log(`   async deleteBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect: start\");\n\n        async function getBooks() {\n            console.log(\"   async getBooks: start\");\n            setIsLoading(true);\n            try {\n                const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}`);\n                const body = await response.json();\n                console.log(`   async getBooks: received response ${JSON.stringify(body)}`);\n                setBooks(body);\n                console.log(\"   async getBooks: done\");\n            } catch (e) {\n                console.log(`   async getBooks: ERROR ${e}`);\n                setMessage(\"Connection error\");\n            }\n            setIsLoading(false);\n        }\n\n        getBooks();\n        console.log(\"useEffect: back after getBooks\");\n        console.log(\"useEffect: done\");\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {isLoading ? <p className=\"isLoading\">LOADING DATA!!!</p> : false}\n            {message ? <p className=\"message\" onClick={() => setMessage()}>{message}</p> : false}\n            <div className=\"booksList\">{books.map((b) =>\n                <Book key={b.title} book={b}\n                      setSelectedBook={setSelectedBook}\n                      deleteBook={deleteBook}/>)}</div>\n            <CreateForm selectedBook={selectedBook} createBook={createBook}/>\n            <EditForm selectedBook={selectedBook} setSelectedBook={setSelectedBook} editBook={editBook}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
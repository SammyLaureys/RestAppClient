{"version":3,"sources":["components/createform.js","components/editform.js","components/book.js","App.js","reportWebVitals.js","index.js"],"names":["CreateForm","props","createBook","useState","title","setTitle","author","setAuthor","priceInEur","setPriceInEur","className","onSubmit","e","console","log","preventDefault","value","required","onChange","target","pattern","type","min","max","parseInt","EditForm","selectedBook","setSelectedBook","editBook","onClick","Book","book","deleteBook","App","books","setBooks","isLoading","setIsLoading","message","setMessage","a","JSON","stringify","fetchOptions","method","headers","body","fetch","process","response","json","ok","status","error","errorMessage","errors","reduce","accumulator","defaultMessage","id","map","b","filter","getBooks","authorization","window","btoa","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEO,SAASA,EAAWC,GAAQ,IACxBC,EAAcD,EAAdC,WADuB,EAEJC,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGFF,mBAAS,IAHP,mBAGvBG,EAHuB,KAGfC,EAHe,OAIMJ,mBAAS,IAJf,mBAIvBK,EAJuB,KAIXC,EAJW,KAM9B,OAAO,qBAAKC,UAAU,UAAf,SACH,uBAAMC,SAAU,SAACC,GACbC,QAAQC,IAAI,UACZZ,EAAW,CAACE,QAAOE,SAAQE,eAC3BI,EAAEG,kBAHN,UAKI,2CACA,sBAAKL,UAAU,aAAf,UACI,4CACA,uBAAOM,MAAOZ,EAAOa,UAAQ,EACtBC,SAAU,SAACN,GAAD,OAAOP,EAASO,EAAEO,OAAOH,aAE9C,sBAAKN,UAAU,aAAf,UACI,6CACA,uBAAOM,MAAOV,EAAQW,UAAQ,EAACG,QAAQ,aAAaC,KAAK,OAClDH,SAAU,SAACN,GAAD,OAAOL,EAAUK,EAAEO,OAAOH,aAE/C,sBAAKN,UAAU,aAAf,UACI,qDACA,uBAAOM,MAAOR,EAAYa,KAAK,SAASC,IAAI,IAAIC,IAAI,OAC7CL,SAAU,SAACN,GAAD,OAAOH,EAAce,SAASZ,EAAEO,OAAOH,QAAU,YAEtE,qBAAKN,UAAU,mBAAf,SACI,mD,WC9BT,SAASe,EAASxB,GAAQ,IACtByB,EAA2CzB,EAA3CyB,aAAcC,EAA6B1B,EAA7B0B,gBAAiBC,EAAY3B,EAAZ2B,SAEtC,OAAKF,EAEE,qCACH,qBAAKhB,UAAU,UAAUmB,QAAS,kBAAMF,OACxC,qBAAKjB,UAAU,gBAAf,SACI,uBAAMC,SAAU,SAACC,GACbC,QAAQC,IAAI,UACZc,EAASF,GACTC,IACAf,EAAEG,kBAJN,UAMI,gDACA,sBAAKL,UAAU,aAAf,UACI,4CACA,uBAAOM,MAAOU,EAAatB,MAAOa,UAAQ,EACnCC,SAAU,SAACN,GAAD,OAAOe,EAAgB,2BAAID,GAAL,IAAmBtB,MAAOQ,EAAEO,OAAOH,eAE9E,sBAAKN,UAAU,aAAf,UACI,6CACA,uBAAOM,MAAOU,EAAapB,OAAQW,UAAQ,EAACG,QAAQ,aAAaC,KAAK,OAC/DH,SAAU,SAACN,GAAD,OAAOe,EAAgB,2BAAID,GAAL,IAAmBpB,OAAQM,EAAEO,OAAOH,eAE/E,sBAAKN,UAAU,aAAf,UACI,qDACA,uBAAOM,MAAOU,EAAalB,YAAc,GAAIa,KAAK,SAASC,IAAI,IAAIC,IAAI,OAChEL,SAAU,SAACN,GAAD,OAAOe,EAAgB,2BAC1BD,GADyB,IAE5BlB,WAAYgB,SAASZ,EAAEO,OAAOH,QAAU,cAGvD,sBAAKN,UAAU,mBAAf,UACI,wBAAQW,KAAK,SAASQ,QAAS,kBAAMF,KAArC,oBACA,qDAhCU,KCJvB,SAASG,EAAK7B,GAAQ,IAClB8B,EAAqC9B,EAArC8B,KAAMJ,EAA+B1B,EAA/B0B,gBAAiBK,EAAc/B,EAAd+B,WAC9B,OAAO,sBAAKtB,UAAU,UAAf,UACH,qBAAKA,UAAU,YAAf,SAA4BqB,EAAK3B,QACjC,qBAAKM,UAAU,aAAf,SAA6BqB,EAAKzB,SAClC,sBAAKI,UAAU,YAAf,UAA4BqB,EAAKvB,WAAYuB,EAAKvB,YAAY,aAC9D,8BACI,wBAAQqB,QAAS,kBAAMF,EAAgBI,IAAvC,oBAEJ,8BACI,wBAAQF,QAAS,kBAAMG,EAAWD,IAAlC,yBC2IGE,MA/If,WAAgB,IAAD,EACe9B,mBAAS,IADxB,mBACJ+B,EADI,KACGC,EADH,OAE6BhC,qBAF7B,mBAEJuB,EAFI,KAEUC,EAFV,OAGuBxB,oBAAS,GAHhC,mBAGJiC,EAHI,KAGOC,EAHP,OAImBlC,qBAJnB,mBAIJmC,EAJI,KAIKC,EAJL,iDAUX,WAA0BR,GAA1B,qBAAAS,EAAA,6DACI3B,QAAQC,IAAR,2BAAgC2B,KAAKC,UAAUX,KAC/CM,GAAa,GAEPM,EAAe,CACjBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,kCAC1BC,KAAML,KAAKC,UAAUX,IAP7B,kBAU+BgB,MAAM,GAAD,OAAIC,+CAA6CL,GAVrF,cAUcM,EAVd,gBAW2BA,EAASC,OAXpC,OAWcJ,EAXd,OAYYG,EAASE,IACTtC,QAAQC,IAAR,iDAAsD2B,KAAKC,UAAUI,KACrEX,EAAS,GAAD,mBAAKD,GAAL,CAAYY,KACpBjC,QAAQC,IAAI,6BACZyB,EAAW,QAAD,OAASR,EAAK3B,MAAd,eAEVS,QAAQC,IAAR,sCAA2CmC,EAASG,OAApD,cAAgEN,EAAKO,MAArE,cAAgFP,EAAKR,QAArF,MACMgB,EAAeR,EAAKS,QACtBT,EAAKS,OAAOC,QAAO,SAACC,EAAaJ,GAAd,gBAA2BI,EAA3B,YAA0CJ,EAAMK,eAAhD,YAAwE,QAC/F7C,QAAQC,IAAR,aAAkB2B,KAAKC,UAAUI,KACjCjC,QAAQC,IAAR,aAAkBwC,IAClBf,EAAWe,GAAgBR,EAAKR,UAvB5C,kDA0BQzB,QAAQC,IAAR,4CACAyB,EAAW,oBA3BnB,QA6BIF,GAAa,GA7BjB,2DAVW,kEA0CX,WAAwBN,GAAxB,mBAAAS,EAAA,yDACSd,EADT,wDAEIb,QAAQC,IAAI,kBACZuB,GAAa,GAEPM,EAAe,CACjBC,OAAQ,MACRC,QAAS,CAAC,eAAgB,kCAC1BC,KAAML,KAAKC,UAAUX,IAR7B,kBAW+BgB,MAAM,GAAD,OAAIC,8CAAJ,YAAiDjB,EAAK4B,IAAMhB,GAXhG,cAWcM,EAXd,iBAY2BA,EAASC,OAZpC,QAYcJ,EAZd,OAaYG,EAASE,IACTtC,QAAQC,IAAR,+CAAoD2B,KAAKC,UAAUI,KACnEX,EAASD,EAAM0B,KAAI,SAACC,GAAD,OAAOA,EAAEF,KAAOb,EAAKa,GAAKb,EAAOe,MACpDhD,QAAQC,IAAI,2BACZyB,EAAW,QAAD,OAASR,EAAK3B,MAAd,gBAEVS,QAAQC,IAAR,oCAAyCmC,EAASG,OAAlD,cAA8DN,EAAKO,MAAnE,cAA8EP,EAAKR,QAAnF,MACAC,EAAWO,EAAKR,UApB5B,kDAuBQzB,QAAQC,IAAR,4CACAyB,EAAW,oBAxBnB,QA0BIF,GAAa,GA1BjB,2DA1CW,+BAuEIL,EAvEJ,8EAuEX,WAA0BD,GAA1B,mBAAAS,EAAA,6DACI3B,QAAQC,IAAI,oBACZuB,GAAa,GAEPM,EAAe,CACjBC,OAAQ,UALhB,kBAQ+BG,MAAM,GAAD,OAAIC,8CAAJ,YAAiDjB,EAAK4B,IAAMhB,GARhG,YAQcM,EARd,QASqBE,GATrB,iBAUYtC,QAAQC,IAAR,2CACAqB,EAASD,EAAM4B,QAAO,SAACD,GAAD,OAAOA,EAAEF,KAAO5B,EAAK4B,OAC3C9C,QAAQC,IAAI,6BACZyB,EAAW,QAAD,OAASR,EAAK3B,MAAd,aAbtB,yCAe+B6C,EAASC,OAfxC,QAekBJ,EAflB,OAgBYjC,QAAQC,IAAR,sCAA2CmC,EAASG,OAApD,cAAgEN,EAAKO,MAArE,cAAgFP,EAAKR,QAArF,MACAC,EAAWO,EAAKR,SAjB5B,0DAoBQzB,QAAQC,IAAR,4CACAyB,EAAW,oBArBnB,QAuBIF,GAAa,GAvBjB,2DAvEW,+BAiGI0B,IAjGJ,2EAiGX,gCAAAvB,EAAA,6DACI3B,QAAQC,IAAI,4BACZuB,GAAa,GAFjB,SAIcM,EAAe,CACjBC,OAAQ,MACR,YAAe,UACfC,QAAS,CACL,eAAgB,gCAChBmB,cAAe,SAAWC,OAAOC,KAAK,iBATtD,SAY+BnB,MAAM,GAAD,OAAIC,+CAA6CL,GAZrF,cAYcM,EAZd,gBAa2BA,EAASC,OAbpC,OAacJ,EAbd,OAcQjC,QAAQC,IAAR,+CAAoD2B,KAAKC,UAAUI,KACnEX,EAASW,GACTjC,QAAQC,IAAI,2BAhBpB,kDAkBQD,QAAQC,IAAR,0CACAyB,EAAW,oBAnBnB,QAqBIF,GAAa,GArBjB,2DAjGW,sBAgIX,OAzHAxB,QAAQC,IAAI,gBAkHZqD,qBAAU,WACNtD,QAAQC,IAAI,oBACZiD,IACAlD,QAAQC,IAAI,kCACZD,QAAQC,IAAI,qBACb,IAGC,sBAAKJ,UAAU,MAAf,YACK0B,GAAY,mBAAG1B,UAAU,YAAb,+BACZ4B,GAAU,mBAAG5B,UAAU,UAAUmB,QAAS,kBAAMU,KAAtC,SAAqDD,IAChE,wBAAQT,QAASkC,EAAjB,qBACA,qBAAKrD,UAAU,YAAf,SAA4BwB,EAAM0B,KAAI,SAACC,GAAD,OAClC,cAAC/B,EAAD,CAAoBC,KAAM8B,EACpBlC,gBAAiBA,EACjBK,WAAYA,GAFP6B,EAAEzD,YAGjB,cAACJ,EAAD,CAAY0B,aAAcA,EAAcxB,WAzIrC,8CA0IH,cAACuB,EAAD,CAAUC,aAAcA,EAAcC,gBAAiBA,EAAiBC,SA1IrE,kDCMAwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.696115a9.chunk.js","sourcesContent":["import {useState} from \"react\";\n\nexport function CreateForm(props) {\n    const {createBook} = props;\n    const [title, setTitle] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [priceInEur, setPriceInEur] = useState(\"\");\n\n    return <div className=\"editbox\">\n        <form onSubmit={(e) => {\n            console.log(\"SUBMIT\");\n            createBook({title, author, priceInEur});\n            e.preventDefault();\n        }}>\n            <div>new book</div>\n            <div className=\"editboxrow\">\n                <label>title: </label>\n                <input value={title} required\n                       onChange={(e) => setTitle(e.target.value)}/>\n            </div>\n            <div className=\"editboxrow\">\n                <label>author: </label>\n                <input value={author} required pattern=\"[a-zA-Z ]*\" type=\"text\"\n                       onChange={(e) => setAuthor(e.target.value)}/>\n            </div>\n            <div className=\"editboxrow\">\n                <label>price (€): </label>\n                <input value={priceInEur} type=\"number\" min=\"0\" max=\"2000\"\n                       onChange={(e) => setPriceInEur(parseInt(e.target.value) || null)}/>\n            </div>\n            <div className=\"editboxbuttonrow\">\n                <button>create</button>\n            </div>\n        </form>\n    </div>;\n}","/** @return {null} */\nexport function EditForm(props) {\n    const {selectedBook, setSelectedBook, editBook} = props;\n\n    if (!selectedBook) return null;\n\n    return <>\n        <div className=\"overlay\" onClick={() => setSelectedBook()}/>\n        <div className=\"editbox modal\">\n            <form onSubmit={(e) => {\n                console.log(\"SUBMIT\");\n                editBook(selectedBook);\n                setSelectedBook();\n                e.preventDefault();\n            }}>\n                <div>edit the book</div>\n                <div className=\"editboxrow\">\n                    <label>title: </label>\n                    <input value={selectedBook.title} required\n                           onChange={(e) => setSelectedBook({...selectedBook, title: e.target.value})}/>\n                </div>\n                <div className=\"editboxrow\">\n                    <label>author: </label>\n                    <input value={selectedBook.author} required pattern=\"[a-zA-Z ]*\" type=\"text\"\n                           onChange={(e) => setSelectedBook({...selectedBook, author: e.target.value})}/>\n                </div>\n                <div className=\"editboxrow\">\n                    <label>price (€): </label>\n                    <input value={selectedBook.priceInEur || \"\"} type=\"number\" min=\"0\" max=\"2000\"\n                           onChange={(e) => setSelectedBook({\n                               ...selectedBook,\n                               priceInEur: parseInt(e.target.value) || null\n                           })}/>\n                </div>\n                <div className=\"editboxbuttonrow\">\n                    <button type=\"button\" onClick={() => setSelectedBook()}>cancel</button>\n                    <button>save</button>\n                </div>\n            </form>\n        </div>\n    </>;\n}","export function Book(props) {\n    const {book, setSelectedBook, deleteBook} = props;\n    return <div className=\"bookRow\">\n        <div className=\"bookTitle\">{book.title}</div>\n        <div className=\"bookAuthor\">{book.author}</div>\n        <div className=\"bookPrice\">{book.priceInEur}{book.priceInEur&&\" €\"}</div>\n        <div>\n            <button onClick={() => setSelectedBook(book)}>edit</button>\n        </div>\n        <div>\n            <button onClick={() => deleteBook(book)}>delete</button>\n        </div>\n    </div>\n}","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {CreateForm} from \"./components/createform\";\nimport {EditForm} from \"./components/editform\";\nimport {Book} from \"./components/book\";\n\nfunction App() {\n    const [books, setBooks] = useState([]);\n    const [selectedBook, setSelectedBook] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [message, setMessage] = useState();\n\n\n    console.log(\"render App()\");\n\n\n    async function createBook(book) {\n        console.log(`async createBook ${JSON.stringify(book)}`);\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(book)\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}`, fetchOptions);\n            const body = await response.json();\n            if (response.ok) {\n                console.log(`   async createBook: received response ${JSON.stringify(body)}`);\n                setBooks([...books, body]);\n                console.log(\"   async createBook: done\");\n                setMessage(`book ${book.title} created`);\n            } else {\n                console.log(`   async createBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                const errorMessage = body.errors &&\n                    body.errors.reduce((accumulator, error) => `${accumulator} ${error.defaultMessage}  --- `, \"--- \");\n                console.log(`   ${JSON.stringify(body)}`);\n                console.log(`   ${errorMessage}`);\n                setMessage(errorMessage || body.message);\n            }\n        } catch (e) {\n            console.log(`   async createBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    async function editBook(book) {\n        if (!selectedBook) return;\n        console.log(\"async editBook\");\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(book)\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}/${book.id}`, fetchOptions);\n            const body = await response.json();\n            if (response.ok) {\n                console.log(`   async editBook: received response ${JSON.stringify(body)}`);\n                setBooks(books.map((b) => b.id === body.id ? body : b));\n                console.log(\"   async editBook: done\");\n                setMessage(`book ${book.title} modified`);\n            } else {\n                console.log(`   async editBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                setMessage(body.message);\n            }\n        } catch (e) {\n            console.log(`   async deleteBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    async function deleteBook(book) {\n        console.log(\"async deleteBook\");\n        setIsLoading(true);\n\n        const fetchOptions = {\n            method: 'DELETE'\n        };\n        try {\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}/${book.id}`, fetchOptions);\n            if (response.ok) {\n                console.log(`   async deleteBook: received response `);\n                setBooks(books.filter((b) => b.id !== book.id));\n                console.log(\"   async deleteBook: done\");\n                setMessage(`book ${book.title} deleted`);\n            } else {\n                const body = await response.json();\n                console.log(`   async deleteBook: ERROR: ${response.status} - ${body.error} - ${body.message} `);\n                setMessage(body.message);\n            }\n        } catch (e) {\n            console.log(`   async deleteBook: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    async function getBooks() {\n        console.log(\"   async getBooks: start\");\n        setIsLoading(true);\n        try {\n            const fetchOptions = {\n                method: 'GET',\n                'credentials': 'include',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf8',\n                    authorization: \"Basic \" + window.btoa(\"sammy:sammy\")\n                }\n            }\n            const response = await fetch(`${process.env.REACT_APP_CONNECTION_LOCATION}`, fetchOptions);\n            const body = await response.json();\n            console.log(`   async getBooks: received response ${JSON.stringify(body)}`);\n            setBooks(body);\n            console.log(\"   async getBooks: done\");\n        } catch (e) {\n            console.log(`   async getBooks: ERROR ${e}`);\n            setMessage(\"Connection error\");\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect: start\");\n        getBooks();\n        console.log(\"useEffect: back after getBooks\");\n        console.log(\"useEffect: done\");\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {isLoading ? <p className=\"isLoading\">LOADING DATA!!!</p> : false}\n            {message ? <p className=\"message\" onClick={() => setMessage()}>{message}</p> : false}\n            <button onClick={getBooks}>refresh</button>\n            <div className=\"booksList\">{books.map((b) =>\n                <Book key={b.title} book={b}\n                      setSelectedBook={setSelectedBook}\n                      deleteBook={deleteBook}/>)}</div>\n            <CreateForm selectedBook={selectedBook} createBook={createBook}/>\n            <EditForm selectedBook={selectedBook} setSelectedBook={setSelectedBook} editBook={editBook}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}